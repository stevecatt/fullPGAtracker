
//this is for just using a list instead of table may need if responsiveness is not good

this.props.players.map((p)=> <li key = {p.player_id}><img src= {`https://pga-tour-res.cloudinary.com/image/upload/b_rgb:cecece,c_fill,d_headshots_default.png,f_jpg,g_face:center,h_65,q_auto,w_65/headshots_${p.player_id}.png`}/>
            {p.current_position}__{p.player_bio.country}__{p.current_position}__{p.player_bio.first_name}__{p.player_bio.last_name}__{p.today}__{p.thru}__{p.total} 
            </li>)}
            </ul>


            ul>
           

            {this.state.favorites.map((p)=> <li key = {p.player_id}><img src= {`https://pga-tour-res.cloudinary.com/image/upload/b_rgb:cecece,c_fill,d_headshots_default.png,f_jpg,g_face:center,h_65,q_auto,w_65/headshots_${p.player_id}.png`}/>
            {p.current_position}__{p.player_bio.country}__{p.current_position}__{p.player_bio.first_name}__{p.player_bio.last_name}__{p.today}__{p.thru}__{p.total} 
            </li>)}
            </ul>



            //     let favoriteObject=[]
    //    favorites.map((q)=>{
    //        console.log(q)
    //        let favoriteObjectpush=q.map((p)=>{
    //            return (<li key = {p.player_id}><img src= {`https://pga-tour-res.cloudinary.com/image/upload/b_rgb:cecece,c_fill,d_headshots_default.png,f_jpg,g_face:center,h_65,q_auto,w_65/headshots_${p.player_id}.png`}/>
    //            {p.current_position}__{p.player_bio.country}__{p.current_position}__{p.player_bio.first_name}__{p.player_bio.last_name}__{p.today}__{p.thru}__{p.total} 
    //            </li>)
              
               
          // })
           //console.log (favoriteObjectpush)
      // })

//this is for favorites list
let g=this.state.favorites.map((p)=>{
            console.log("this is p",p[0].player_id)
            return  <li key = {p[0].player_id}><img src= {`https://pga-tour-res.cloudinary.com/image/upload/b_rgb:cecece,c_fill,d_headshots_default.png,f_jpg,g_face:center,h_65,q_auto,w_65/headshots_${p[0].player_id}.png`}/>
            {p[0].current_position}__{p[0].player_bio.country}__{p[0].current_position}__{p[0].player_bio.first_name}__{p[0].player_bio.last_name}__{p[0].today}__{p[0].thru}__{p[0].total} 
           </li>
               
           
        })

  getUserFavorites =()=>{
    let favorites =[]
    axios.post('https://scorestracker.herokuapp.com/get-favorites',{
        uid:this.props.uid
    })
    .then(response =>{
        console.log(response.data.favorites)
       
        let ids = response.data.favorites
        let i=0
        for(i=0;i<ids.length;i++){
            console.log(ids[i].pga_id)
            
            
            let favoritepush= this.props.players.filter(player=>player.player_id == ids[i].pga_id)
            if (favoritepush.length > 0){
                favorites.push(favoritepush)

            }
           
            console.log(favoritepush)
            
            

            
        }
       this.setState({
           favorites:favorites

       })
       this.props.onFavSelected(this.state.favorites)

   
    })
   // console.log("this is outside",favorites)
}
    


    <div>
              <Navbar></Navbar>
               <NavbarBrand>PGA Tracker</NavbarBrand>
               <NavbarToggler onClick={this.toggleNavbar} className="mr-2"></NavbarToggler>
               <Collapse isOpen={!this.state.collapsed} navbar>
               <Nav className="ml-auto" navbar>
               <NavItem className="d-flex align-items-center">
              <NavLink lassName="font-weight-bold topbar" to="/"> Homec </NavLink>
              </NavItem>
              <NavItem className="d-flex align-items-center">
              {!this.props.isAuth ?<NavLink className="font-weight-bold topbar" to="/login"> login </NavLink>:null}
              </NavItem>
              {!this.props.isAuth ?<NavLink className="font-weight-bold topbar" to="/register"> Register</NavLink>:null}
              {this.props.isAuth ?  <NavLink className="font-weight-bold topbar" to="/logout"> logout </NavLink>:null}
                <NavLink className="font-weight-bold topbar" to="/schedule"> schedule </NavLink>
                

              {this.props.isAuth ?  <NavLink className="font-weight-bold topbar" to="/userpage"> User Page </NavLink>:null}
              </Nav>
              
            </div>
        )
    }
}


.miniRemoveButton {
  background-color:darkgray;
  color: #F1373D;
  border-radius:50%;
  padding:5px
}

.miniSaveButton {
  background-color:darkgray;
  color: #076652;
  border-radius:50%;
  padding: 5px 
}

.navbar-light {
  color:green
}